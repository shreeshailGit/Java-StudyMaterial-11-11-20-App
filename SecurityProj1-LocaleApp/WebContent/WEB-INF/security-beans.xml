<?xml version="1.0" encoding="UTF-8"?>
<beans xmlns="http://www.springframework.org/schema/beans"
	xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
	xmlns:context="http://www.springframework.org/schema/context"
	xmlns:jee="http://www.springframework.org/schema/jee"
	xmlns:security="http://www.springframework.org/schema/security"
	xsi:schemaLocation="http://www.springframework.org/schema/beans http://www.springframework.org/schema/beans/spring-beans.xsd
		http://www.springframework.org/schema/context http://www.springframework.org/schema/context/spring-context-4.3.xsd
		http://www.springframework.org/schema/jee http://www.springframework.org/schema/jee/spring-jee-4.3.xsd
		http://www.springframework.org/schema/security http://www.springframework.org/schema/security/spring-security-5.4.xsd">


<security:http use-expressions="true">
   <security:intercept-url pattern="/welcome" access="permitAll"/>
   <security:intercept-url pattern="/countries" access="hasAnyRole('ROLE_ADMIN','ROLE_MANAGER')" />
   <!--enable basic login  -->
   <!--  <security:http-basic/> -->
    <!--enable form page  -->
   <security:form-login/>
   
   <!--To specify custome error page for 403 error(for authorization failure)  -->
   <security:access-denied-handler error-page="/access_denied.jsp"/>
   <security:logout logout-success-url="/logout.jsp"/>
   <security:remember-me/>
   
   <security:session-management>
      <security:concurrency-control error-if-maximum-exceeded="true" max-sessions="2"/>
   </security:session-management>
</security:http>

<!--cfg using security-beans.xml  -->
<!-- <security:authentication-manager>
    taking current spring bean cfg file itself as authentication info provider
    <security:authentication-provider>
      <security:user-service>
          <security:user name="raja" password="{noop}rani" authorities="ROLE_MANAGER" locked="true"/>
          <security:user name="rajesh" password="{noop}hyd" authorities="ROLE_ADMIN"/>
          <security:user name="karan" password="{noop}kiran" authorities="ROLE_CUSTOMER"/>
          <security:user name="lokesh" password="{noop}delhi" authorities="ROLE_VISITOR"/>
      </security:user-service>
    </security:authentication-provider>
</security:authentication-manager> -->

<!--cfg using info.properties file  -->
<!--  <security:authentication-manager>
    <security:authentication-provider>
         <security:user-service properties="classpath:com/nt/commons/info.properties"/>   
    </security:authentication-provider>
 </security:authentication-manager> -->
 
 <!--cfg using db tables  -->
 <security:authentication-manager>
      <security:authentication-provider>
        <security:jdbc-user-service data-source-ref="ds"
                          users-by-username-query="SELECT UNAME,PWD,STATUS FROM USERS WHERE UNAME=?"
                          authorities-by-username-query="SELECT UNAME,ROLE FROM USER_ROLES WHERE UNAME=?"/>
      </security:authentication-provider>
     
 </security:authentication-manager>
 
 
 
 
</beans>
